[
  {
    "id": 20,
    "title": "Application architectures with Grails",
    "summary": "<p>Grails is geared towards an MVC architecture with a database back-end and a service layer. But is this the only way to write Grails applications? Is it even the best approach? In this talk, I'll look at how we should approach the design of our Grails applications and show you some other architectures you might use. More importantly, you'll learn <em>why<\u002fem> you might use them.<\u002fp>",
    "speakers": [
      {
        "id": 11,
        "name": "Peter Ledbrook"
      }
    ],
    "tags": [
      "Architecture",
      "grails"
    ],
    "slot": {
      "start": "10:30:00",
      "end": "11:20:00",
      "duration": 50,
      "talk": {
        "id": 20,
        "title": "Application architectures with Grails"
      },
      "speakers": [
        {
          "id": 11,
          "name": "Peter Ledbrook"
        }
      ]
    }
  },
  {
    "id": 106,
    "title": "BDD using Cucumber JVM and Groovy",
    "summary": "<p>Behaviour Driven Development (BDD) is the next step to writing applications that hit the mark! What makes this technique different is that it engages Stakeholders from start to finish of a project. This is done by writing Specifications by Example in collaboration with all Stakeholders.<\u002fp><p>This presentation will use Cucumber with Groovy to demonstrate how you can apply BDD to your next project. We will look at using Cucumber in context of both Groovy and Grails applications. We will demonstrate how to use Gherkin syntax to write clear Scenarios, write Step Definitions in Groovy, then use Geb to interact with a browser. We will implement the new feature in our Grails application using Spock to test drive our finer grained components. Lastly, we will demonstrate our Cucumber Feature running end-to-end.<\u002fp><p>The purpose of this presentation is to encourage others in the Groovy community to embrace testing with BDD, and to write relevant useful applications.<\u002fp>",
    "speakers": [
      {
        "id": 36,
        "name": "Marco Vermeulen"
      }
    ],
    "tags": ["groovy"],
    "slot": {
      "start": "15:45:00",
      "end": "16:35:00",
      "duration": 50,
      "talk": {
        "id": 106,
        "title": "BDD using Cucumber JVM and Groovy"
      },
      "speakers": [
        {
          "id": 36,
          "name": "Marco Vermeulen"
        }
      ]
    }
  },
  {
    "id": 29,
    "title": "Bootstrapping your projects with Lazybones",
    "summary": "<p>Have you heard the expression \"to start with a clean slate?\" In terms of programming, that's the last thing I want to do. Perhaps I've been spoiled by Grails' <code>create-app<\u002fcode> command, which gives you a fully working application out of the box.<\u002fp><p>Lazybones is a simple tool that gives you the same sort of behaviour for any type of project, not just Grails. Want to get started with Ratpack? Simple, create a new project based on one of the Ratpack template projects. As long as there is a published template, you can use it. In this talk, you'll see how to use Lazybones to create new projects and also how to develop and publish project templates for you, your team, and the whole world to use.<\u002fp>",
    "speakers": [
      {
        "id": 11,
        "name": "Peter Ledbrook"
      }
    ],
    "tags": ["Tools"],
    "slot": {
      "start": "16:50:00",
      "end": "17:05:00",
      "duration": 15,
      "talk": {
        "id": 29,
        "title": "Bootstrapping your projects with Lazybones"
      },
      "speakers": [
        {
          "id": 11,
          "name": "Peter Ledbrook"
        }
      ]
    }
  },
  {
    "id": 50,
    "title": "Building Micro Services using Groovy, Spring Boot and friends.",
    "summary": "<p>Spring Boot is the new addition to the Spring family. It takes an opinionated view of building Spring applications, adopting convention over configuration as default. Add Groovy to the mix, and you have a web stack that will give you wings!<\u002fp><p>In this talk we will: * discuss the Micro Service Architecture. * discuss the nuts and bolts required to build a Spring Boot Micro Service. * test and write components with Groovy and Spock * run it on an embedded Jetty or Tomcat server * use Spring Data to interact with Postgres or MongoDB databases * use Cucumber with Geb for functional. * how to use Gradle to build. * set up a Continuous Delivery pipeline in the cloud. * automatically deploy the application to a PaaS platform. * use Swagger spring-mvc UI to dynamically document the API.<\u002fp><p>By the end of this session, participants should know enough to build their own applications and deploy them to the cloud with ease!<\u002fp>",
    "speakers": [
      {
        "id": 36,
        "name": "Marco Vermeulen"
      }
    ],
    "tags": [
      "Spock",
      "groovy",
      "Spring boot"
    ],
    "slot": {
      "start": "11:50:00",
      "end": "12:40:00",
      "duration": 50,
      "talk": {
        "id": 50,
        "title": "Building Micro Services using Groovy, Spring Boot and friends."
      },
      "speakers": [
        {
          "id": 36,
          "name": "Marco Vermeulen"
        }
      ]
    }
  },
  {
    "id": 104,
    "title": "CRaSH the shell for the Java Virtual Machine",
    "summary": "<p>CRaSH is the open source shell for the JVM. The shell can be accessed by various ways, remotely using network protocols such as SSH, locally by attaching a shell to a running virtual machine or via a web interface. Commands are written Groovy and can be developed live making the extensibility of the shell easy with quick development cycles. Since the version 1.3, the REPL also speaks the Groovy language, allowing Groovy combination of command using pipes.<\u002fp><p>CRaSH comes with commands such as thread management, log management, database access and JMX. The session will begin with an introduction to the shell. The main part of the session will focus on showing CRaSH commands development with few examples, showing how easy and powerful the development is.<\u002fp><p>The audience will learn how to use CRaSH for their own needs: it can be a simple usage or more advanced like developing a command or embedding the shell in their own runtime like a web application or a Grails application.<\u002fp>",
    "speakers": [
      {
        "id": 64,
        "name": "Julien Viet"
      }
    ],
    "tags": ["Shell groovy jvm management cli ssh console"],
    "slot": {
      "start": "10:50:00",
      "end": "11:40:00",
      "duration": 50,
      "talk": {
        "id": 104,
        "title": "CRaSH the shell for the Java Virtual Machine"
      },
      "speakers": [
        {
          "id": 64,
          "name": "Julien Viet"
        }
      ]
    }
  },
  {
    "id": 67,
    "title": "Creating RESTful API's with Grails and Spring Security",
    "summary": "<p>In this talk I will cover how to create a REST API using Grails 2.3 to support single-page applications, exploring all the possible alternatives. <\u002fp><p>I will also explain how to integrate Spring Security using the spring-security-rest plugin I recently created, to implement a stateless, token-based, RESTful authentication.<\u002fp>",
    "speakers": [
      {
        "id": 7,
        "name": "Alvaro Sanchez-Mariscal"
      }
    ],
    "tags": [
      "Rest",
      "Api's",
      "Spring security"
    ],
    "slot": {
      "start": "12:30:00",
      "end": "15:15:00",
      "duration": 165,
      "talk": {
        "id": 67,
        "title": "Creating RESTful API's with Grails and Spring Security"
      },
      "speakers": [
        {
          "id": 7,
          "name": "Alvaro Sanchez-Mariscal"
        }
      ]
    }
  },
  {
    "id": 81,
    "title": "Cut your Grails application to pieces - build feature plugins",
    "summary": "<p>Reuse has been taught in CS classes since the very beginning. But how should you practically do to reuse functionality from one Grails application in other applications? The plugin subsystem in Grails is an awesome machinery that makes it easy to separate functionality into distinct plugins. Plugins that can be used in many applications with similar functionality. Yet have unique features without creating a maintenance hell.<\u002fp><p>In this session you will learn how to think \"feature plugins\" when you're designing and developing your Grails applications. We will cover topics like inter-plugin communication using application events and how to support different look and feel for each application using \"theme plugins\". You will also learn how each plugin can be tested and documented separately from the application.<\u002fp><p>After this session \"grails create-plugin\" will be your best friend.<\u002fp>",
    "speakers": [
      {
        "id": 55,
        "name": "Göran Ehrsson"
      }
    ],
    "tags": [
      "grails",
      "Plugins"
    ],
    "slot": {
      "start": "10:50:00",
      "end": "11:40:00",
      "duration": 50,
      "talk": {
        "id": 81,
        "title": "Cut your Grails application to pieces - build feature plugins"
      },
      "speakers": [
        {
          "id": 55,
          "name": "Göran Ehrsson"
        }
      ]
    }
  },
  {
    "id": 34,
    "title": "Deploying, Scaling, and Running Grails on AWS and VPC",
    "summary": "<p>This talk will cover how to get your application running on AWS VPC and related services. We will go over some related services and their current state like RDS, autoscaling, s3, cloudfront, s3fs, ebs, elastic beanstalk, etc and how your Grails application can benefit from using these. The networking can also be confusing with your application so we'll cover the basics here as well. I will share lots of random nuggets of information that I have learned the hard and and recommended practices of configuration of your VPC as well.<\u002fp>",
    "speakers": [
      {
        "id": 29,
        "name": "Ryan Vanderwerf"
      }
    ],
    "tags": [
      "grails",
      "Auto-scaling",
      "Aws",
      "Vpc"
    ],
    "slot": {
      "start": "13:35:00",
      "end": "14:25:00",
      "duration": 50,
      "talk": {
        "id": 34,
        "title": "Deploying, Scaling, and Running Grails on AWS and VPC"
      },
      "speakers": [
        {
          "id": 29,
          "name": "Ryan Vanderwerf"
        }
      ]
    }
  },
  {
    "id": 25,
    "title": "Developping Android applications with Groovy?",
    "summary": "<p>We all love Groovy as a language to develop applications on servers or desktop. But what about mobile applications? In particular, with Android natively supporting Java, is it possible to develop an application in Groovy? Can we ease the pain on that platform too?<\u002fp><p>In this session, we will demonstrate that it is possible to run an application on Android, developped using the Groovy language and the Gradle plugin. We will discuss the modifications that were needed to do this, as well as the limitations and drawbacks.<\u002fp>",
    "speakers": [
      {
        "id": 27,
        "name": "Cédric Champeau"
      }
    ],
    "tags": [
      "Android",
      "groovy"
    ],
    "slot": {
      "start": "11:50:00",
      "end": "12:40:00",
      "duration": 50,
      "talk": {
        "id": 25,
        "title": "Developping Android applications with Groovy?"
      },
      "speakers": [
        {
          "id": 27,
          "name": "Cédric Champeau"
        }
      ]
    }
  },
  {
    "id": 103,
    "title": "Functional testing your Grails app with GEB",
    "summary": "<p>GEB (pronounced 'jeb') is a browser automation solution.<\u002fp><p>It brings together the power of WebDriver, the elegance of jQuery content selection, the robustness of Page Object modelling and the expressiveness of the Groovy language.<\u002fp><p>We'll cover what it takes to test your grails application with GEB and discuss successful strategies and drawbacks about the tool.<\u002fp>",
    "speakers": [
      {
        "id": 63,
        "name": "Colin Harrington"
      }
    ],
    "tags": [
      "Testing",
      "grails",
      "Geb"
    ],
    "slot": {
      "start": "14:35:00",
      "end": "15:25:00",
      "duration": 50,
      "talk": {
        "id": 103,
        "title": "Functional testing your Grails app with GEB"
      },
      "speakers": [
        {
          "id": 63,
          "name": "Colin Harrington"
        }
      ]
    }
  },
  {
    "id": 73,
    "title": "Getting Groovy",
    "summary": "<p>You might be coming from a Java background and heard of Groovy “the Java scripting language”. Or you might have started with Grails to develop web applications fast and want to understand more of the Groovy syntax to fully utilize Grails’ potential. Your project might be using Gradle to configure the build process and you have looked at the code writing in Groovy and want to no more. To use Grails or Gradle, or to even write Groovy code in your Java project it is good to know the syntax and to learn what can be achieved with Groovy. In this university session we will look at the Groovy basics and see what it is all about. We don’t want to emphasize too much on theory, so we use small workshop during the session so we can get the Groovy feel ourselves and experience the true power.<\u002fp>",
    "speakers": [
      {
        "id": 51,
        "name": "Hubert Klein Ikkink"
      }
    ],
    "tags": ["groovy"],
    "slot": {
      "start": "09:00:00",
      "end": "11:45:00",
      "duration": 165,
      "talk": {
        "id": 73,
        "title": "Getting Groovy"
      },
      "speakers": [
        {
          "id": 51,
          "name": "Hubert Klein Ikkink"
        }
      ]
    }
  },
  {
    "id": 33,
    "title": "Getting Groovy With Lego Mindstorms EV3",
    "summary": "<p>We will jump in with a crash course of leJOS and how to make working with it more Groovy! We'll also show how to replace Gradle with the standard leJOS Ant build scripts to make building more fun and exciting. I will also show some Grails demo app interaction with the Mindstorms - not just a toy but a great educational tool for building robots and teaching programming! I will include a selection of live EV3 demos of some fun things you can do with them. This will we'll focus a bit more on the Grails app side, and get the robot to drive around with Google Glass and/or Android Wear Watch!<\u002fp>",
    "speakers": [
      {
        "id": 29,
        "name": "Ryan Vanderwerf"
      }
    ],
    "tags": [
      "groovy",
      "Mindstorm",
      "Lego"
    ],
    "slot": {
      "start": "15:30:00",
      "end": "18:15:00",
      "duration": 165,
      "talk": {
        "id": 33,
        "title": "Getting Groovy With Lego Mindstorms EV3"
      },
      "speakers": [
        {
          "id": 29,
          "name": "Ryan Vanderwerf"
        }
      ]
    }
  },
  {
    "id": 37,
    "title": "Getting Groovy and Grails into the Enterprise",
    "summary": "<p>This talk is a mix of strategies to sell Grails and Groovy to your company's management, as well as best practices for CI build pipline to set up in your company to get started on the path to modernization. We will also cover some plugins like struts plugin for Grails to help breathe new life into old legacy application and give you a path forward to modernize those older apps.<\u002fp>",
    "speakers": [
      {
        "id": 29,
        "name": "Ryan Vanderwerf"
      }
    ],
    "tags": [
      "grails",
      "groovy"
    ],
    "slot": {
      "start": "14:35:00",
      "end": "15:25:00",
      "duration": 50,
      "talk": {
        "id": 37,
        "title": "Getting Groovy and Grails into the Enterprise"
      },
      "speakers": [
        {
          "id": 29,
          "name": "Ryan Vanderwerf"
        }
      ]
    }
  },
  {
    "id": 119,
    "title": "Goodbye",
    "summary": "<p>This will be the end of GR8Conf 2014<\u002fp>",
    "speakers": [
      {
        "id": 1,
        "name": "Søren Berg Glasius"
      }
    ],
    "tags": [],
    "slot": {
      "start": "16:50:00",
      "end": "17:10:00",
      "duration": 20,
      "talk": {
        "id": 119,
        "title": "Goodbye"
      },
      "speakers": [
        {
          "id": 1,
          "name": "Søren Berg Glasius"
        }
      ]
    }
  },
  {
    "id": 72,
    "title": "Gradle Goodness",
    "summary": "<p>As we know Gradle is a great build language. It is easy to get started with Gradle, but Gradle also has a wealth of useful features. We can to do the same thing in Gradle often in more than one way. Gradle is also very flexible and allows us to write flexible build scripts. In this session we learn more about Gradle's features. We see how easy it is to extend Gradle with custom tasks and plugins. In this session we look at some not-so-average build scenario's and learn how Gradle can help to write a good build script for these scenario's.<\u002fp>",
    "speakers": [
      {
        "id": 51,
        "name": "Hubert Klein Ikkink"
      }
    ],
    "tags": ["gradle"],
    "slot": {
      "start": "09:35:00",
      "end": "10:25:00",
      "duration": 50,
      "talk": {
        "id": 72,
        "title": "Gradle Goodness"
      },
      "speakers": [
        {
          "id": 51,
          "name": "Hubert Klein Ikkink"
        }
      ]
    }
  },
  {
    "id": 82,
    "title": "Grails & DevOps: continuous integration and delivery in the cloud",
    "summary": "<p>Nowadays, companies require very short release cycles, especially in lean startup environments.<\u002fp><p>But to release often:<\u002fp>\n<ul>\n  <li><strong>deployments<\u002fstrong> should be routine, not terrifying.<\u002fli>\n  <li><strong>configuration<\u002fstrong> should require a few clicks, not a thousand-line shell script.<\u002fli>\n  <li><strong>problems<\u002fstrong> should be easy to spot, not buried in a log file.<\u002fli>\n<\u002ful><p>You are a developer that need to release every week or every day with a <strong>single git commit<\u002fstrong> and <strong>zero-downtime<\u002fstrong>? Easily spot release performance or bugs issues? If required, roll back to previous version in few seconds and one click? And you don't want to manage any dedicated repository, monitoring, build, staging, production servers? <strong>So this talk is for you!<\u002fstrong><\u002fp><p>We will explore <strong>Lean startup<\u002fstrong> and <strong>DevOps<\u002fstrong> concepts and share our experience on <strong>how to create a simple and fully automated build pipeline for Grails apps<\u002fstrong> with a <strong>live demo<\u002fstrong>, based on SaaS/cloud services: GitHub, Travis CI, NewRelic, AWS (ElasticBeanstalk, CloudFront), etc.<\u002fp>",
    "speakers": [
      {
        "id": 38,
        "name": "Benoit Hediard"
      }
    ],
    "tags": [
      "Developer productivity",
      "Devops",
      "grails",
      "Cloud",
      "Aws"
    ],
    "slot": {
      "start": "15:45:00",
      "end": "16:35:00",
      "duration": 50,
      "talk": {
        "id": 82,
        "title": "Grails & DevOps: continuous integration and delivery in the cloud"
      },
      "speakers": [
        {
          "id": 38,
          "name": "Benoit Hediard"
        }
      ]
    }
  },
  {
    "id": 80,
    "title": "Grails 3.0 and Beyond",
    "summary": "<p>In this talk Grails project lead Graeme Rocher will discuss the future of the Grails framework, with discussions on the current Grails 2.4 release and the significant changes coming in Grails 3.0.<\u002fp>",
    "speakers": [
      {
        "id": 54,
        "name": "Graeme Rocher"
      }
    ],
    "tags": [
      "grails",
      "Roadmap"
    ],
    "slot": {
      "start": "08:30:00",
      "end": "09:20:00",
      "duration": 50,
      "talk": {
        "id": 80,
        "title": "Grails 3.0 and Beyond"
      },
      "speakers": [
        {
          "id": 54,
          "name": "Graeme Rocher"
        }
      ]
    }
  },
  {
    "id": 64,
    "title": "Griffon: what's new and what's coming",
    "summary": "<p>The Griffon framework has reinvented itself in order to reach new heights! Version 2.0 brings along a better modular design, dependency injection, JDK8 Lambdas support, and much more. The reduced memory footprint of the Griffon runtime allows applications to be installed on platforms where resources are scarcer, such as Raspberry Pi and other embedded platforms. Turning to the build time, applications can participate effortlessly on multi-project builds, no matter if those builds are driven by Gradle or Maven. There are of course other features that will popup in the near future. Come learn what's new and what's next for Griffon; one thing is for sure, it's future looks very bright.<\u002fp>",
    "speakers": [
      {
        "id": 47,
        "name": "Andres Almiray"
      }
    ],
    "tags": ["griffon"],
    "slot": {
      "start": "17:10:00",
      "end": "17:40:00",
      "duration": 30,
      "talk": {
        "id": 64,
        "title": "Griffon: what's new and what's coming"
      },
      "speakers": [
        {
          "id": 47,
          "name": "Andres Almiray"
        }
      ]
    }
  },
  {
    "id": 1,
    "title": "Grooscript",
    "summary": "<p>Grooscript is an open source project, a little framework that convert groovy code to javascript, more info in grooscript.org.<\u002fp><p>Javascript is cool now, a vibrant community with many new developments. Web development is moving to client size and you must be start to worry about javascript and all the new awesome tools for it. With grooscript, you can join this new wave with our lovely groovy. You can code all the logic of your application in groovy, test with spock, use gradle or any other java or groovy framework. Grooscript will convert your application code to javascript and then you can use it in the browser or Node.js.<\u002fp><p>In this talk I will introduce about grooscript, how started, how can be used, explore its limitations,… Also I will show grooscript grails plugin, and what do you can do with it. We will take a look at Node.js plugin and gradle plugin, and how to use this tools. I will show some demos of different ways to use grooscript.<\u002fp>",
    "speakers": [
      {
        "id": 9,
        "name": "Jorge Franco Leza"
      }
    ],
    "tags": [
      "grails",
      "groovy",
      "Javascript"
    ],
    "slot": {
      "start": "11:35:00",
      "end": "12:25:00",
      "duration": 50,
      "talk": {
        "id": 1,
        "title": "Grooscript"
      },
      "speakers": [
        {
          "id": 9,
          "name": "Jorge Franco Leza"
        }
      ]
    }
  },
  {
    "id": 110,
    "title": "Groovy Puzzlers - As usual - Traps, Pitfalls, and End Cases",
    "summary": "<p>Remember the epic Java Puzzlers? Here’s the Groovy version, and we have some neat ones! Even though we are totally a Grails shop here at JFrog, some of these had us scratching our heads for days trying to figure them out.<\u002fp><p>And there is more! Contributions from the truly Groovy senseis, including @glaforge, @aalmiray, @tim_yates, @kenkousen make this talk an unforgettable journey to Groovy's O_O.<\u002fp><p>In this talk you’ll have the expected dose of fun and enlightenment hearing about our mistakes and failures, great and small, in hard core Groovy/Grails development.<\u002fp>",
    "speakers": [
      {
        "id": 17,
        "name": "Noam Tenne"
      }
    ],
    "tags": [
      "grails",
      "groovy",
      "Puzzlers"
    ],
    "slot": {
      "start": "17:50:00",
      "end": "18:40:00",
      "duration": 50,
      "talk": {
        "id": 110,
        "title": "Groovy Puzzlers - As usual - Traps, Pitfalls, and End Cases"
      },
      "speakers": [
        {
          "id": 17,
          "name": "Noam Tenne"
        }
      ]
    }
  },
  {
    "id": 46,
    "title": "Groovy in 2014 and beyond",
    "summary": "<p>Groovy is already 10 years old, but continues to evolve and innovate.<\u002fp><p>What's new under the hood? - implicit closure coercion - new AST transforms - finer grained script configuration - type checker extensions<\u002fp><p>In the upcoming versions of Groovy, you'll be able to create \"traits\", do tail recursions, and much more.<\u002fp><p>We'll also talk about what's cooking for Groovy 3.0, with its new Meta-Object Protocol, its new grammar, its JDK 8 support.<\u002fp>",
    "speakers": [
      {
        "id": 34,
        "name": "Guillaume Laforge"
      }
    ],
    "tags": ["groovy"],
    "slot": {
      "start": "09:15:00",
      "end": "10:05:00",
      "duration": 50,
      "talk": {
        "id": 46,
        "title": "Groovy in 2014 and beyond"
      },
      "speakers": [
        {
          "id": 34,
          "name": "Guillaume Laforge"
        }
      ]
    }
  },
  {
    "id": 118,
    "title": "Hackergarten on Tour",
    "summary": "<p>Hackergarten is a craftmen's workshop, classroom, a laboratory, a social circle, a playground, and an artist's studio. Our goal is to create something that others can use; whether it be working software, improved documentation, or better educational materials. Our intent is end the evening with a patch or similar contribution submitted to an open and public project. Everyone can join, you do not have to attend GR8Conf! What to Expect - You'll meet some gr8 people, write some gr8 code, and contribute directly to the Groovy community. Expect to leave Hackergarten knowing a Groovy framework or project a lot better, knowing how to create and submit a patch to an open source project, and meeting some new friends. There is no better way to learn about the GR8 technologies than to spend a few hours coding side by side with the project leaders and members What to Bring: Yourself, perhaps your laptop. Expect to pair program. If you don't have a laptop then someone else will.<\u002fp>",
    "speakers": [
      {
        "id": 47,
        "name": "Andres Almiray"
      },
      {
        "id": 11,
        "name": "Peter Ledbrook"
      }
    ],
    "tags": ["Null"],
    "slot": {
      "start": "19:00:00",
      "end": "23:00:00",
      "duration": 240,
      "talk": {
        "id": 118,
        "title": "Hackergarten on Tour"
      },
      "speakers": [
        {
          "id": 47,
          "name": "Andres Almiray"
        },
        {
          "id": 11,
          "name": "Peter Ledbrook"
        }
      ]
    }
  },
  {
    "id": 26,
    "title": "Hybrid client/server view rendering with Grails",
    "summary": "<p>Grails standard view technology – GSPs – has started to feel pretty old-fashioned in recent years with the explosion of rich <em>thick client<\u002fem> web-apps. However, as big sites like Twitter and AirBnb have discovered, server-side view rendering has its advantages for performance, deep-linking and SEO. This talk will explore the use of templates that can be shared by server and client side code to provide a <em>hybrid<\u002fem> approach to view rendering in a Grails application. We'll look at the whys and hows of a hybrid approach using a concrete example application.<\u002fp>",
    "speakers": [
      {
        "id": 26,
        "name": "Rob Fletcher"
      }
    ],
    "tags": [
      "grails",
      "Javascript"
    ],
    "slot": {
      "start": "13:25:00",
      "end": "14:15:00",
      "duration": 50,
      "talk": {
        "id": 26,
        "title": "Hybrid client/server view rendering with Grails"
      },
      "speakers": [
        {
          "id": 26,
          "name": "Rob Fletcher"
        }
      ]
    }
  },
  {
    "id": 24,
    "title": "Idiomatic Spock",
    "summary": "<p>Going beyond the basics of how to use Spock this talk will discuss writing expressive, readable &amp; maintainable specifications using the features of Spock and the Groovy language itself. I will cover a range of topics such as how to structure assertions, effective use of the <code>where:<\u002fcode> block, appropriate use of mocks and stubs, and driving specifications from a database. The focus will always remain on creating tests that are readable, robust and helpful when you need to deal with regressions.<\u002fp>",
    "speakers": [
      {
        "id": 26,
        "name": "Rob Fletcher"
      }
    ],
    "tags": ["Spock"],
    "slot": {
      "start": "15:50:00",
      "end": "16:40:00",
      "duration": 50,
      "talk": {
        "id": 24,
        "title": "Idiomatic Spock"
      },
      "speakers": [
        {
          "id": 26,
          "name": "Rob Fletcher"
        }
      ]
    }
  },
  {
    "id": 115,
    "title": "Integration using Apache Camel and Groovy",
    "summary": "<p>Apache Camel is versatile integration library that supports a huge number of components, enterprise integration patterns, and programming languages.<\u002fp><p>In this this talk I first introduce you to Apache Camel and its concepts. Then we move on to see how you can use the Groovy programming language with Camel as a first class Groovy DSL to build integration flows.<\u002fp><p>You will also learn how to build a new Camel and Groovy app from scratch from a live demo.<\u002fp><p>And we also touch how you can use Camel from grails using the grails-camel plugin.<\u002fp><p>I will also show the web console tools that give you insight into your running Apache Camel applications, including visual route diagrams with tracing, debugging, and profiling capabilities.<\u002fp><p>This session will be taught with a 50/50 mix of slides and live demos, and it will conclude with Q&amp;A time.<\u002fp>",
    "speakers": [
      {
        "id": 69,
        "name": "Claus Ibsen"
      }
    ],
    "tags": [
      "Integration",
      "grails",
      "Dsl",
      "groovy",
      "Camel"
    ],
    "slot": {
      "start": "11:35:00",
      "end": "12:25:00",
      "duration": 50,
      "talk": {
        "id": 115,
        "title": "Integration using Apache Camel and Groovy"
      },
      "speakers": [
        {
          "id": 69,
          "name": "Claus Ibsen"
        }
      ]
    }
  },
  {
    "id": 113,
    "title": "Meet & Greet",
    "summary": "<p>Tueday evening is dedicated to to beers, snacks, and friendly chitchat.<\u002fp><p>This is your official chance to mingle with the rock stars of the Groovy domain and talk with all the other GR8 people.<\u002fp><p>Besides feeding your brain with the latest and greatest from Groovy, we decided that feeding you makes just as much sense... So this year we will host a barbecue!<\u002fp><p>From around 19’ish there will be barbecue food to go with the beers :-)<\u002fp><p>The BBQ is sponsored by NineConsult and the beers are sponsored by Gennemtænkt IT and brewed and bottled by your friendly neighborhood GR8Conf crew.<\u002fp>",
    "speakers": [
      {
        "id": 1,
        "name": "Søren Berg Glasius"
      }
    ],
    "tags": [],
    "slot": {
      "start": "18:30:00",
      "end": "21:30:00",
      "duration": 180,
      "talk": {
        "id": 113,
        "title": "Meet & Greet"
      },
      "speakers": [
        {
          "id": 1,
          "name": "Søren Berg Glasius"
        }
      ]
    }
  },
  {
    "id": 75,
    "title": "Metaprogramming With The Groovy Compiler - Part 2 of 2",
    "summary": "<p>Groovy is a really powerful and really flexible language. The runtime capabilities allow for a lot of capabilities that are not possible with less dynamic languages. Those runtime capabilities are really powerful but are not the whole story of Groovy's dynamic capabilities. Groovy also allows for a lot of dynamic behavior to be introduced at compile time. Participating in the compilation process isn't something that application developers are generally used to doing, but Groovy makes it somewhat easy to jump into that process without having to write a whole compiler of your own. This session will dive deep into the features of Groovy that allow for you to participate in the compilation process to control what the compiler emits. You will learn to add methods to classes, modify existing and more, all at compile time. This session is focused specifically on Groovy's compile time metaprogramming capabilities. Part 1 of 2 will cover Groovy's runtime metaprogramming capabilities.<\u002fp>",
    "speakers": [
      {
        "id": 52,
        "name": "Jeff Scott Brown"
      }
    ],
    "tags": ["Groovy metaprogramming"],
    "slot": {
      "start": "14:30:00",
      "end": "15:20:00",
      "duration": 50,
      "talk": {
        "id": 75,
        "title": "Metaprogramming With The Groovy Compiler - Part 2 of 2"
      },
      "speakers": [
        {
          "id": 52,
          "name": "Jeff Scott Brown"
        }
      ]
    }
  },
  {
    "id": 74,
    "title": "Metaprogramming With The Groovy Runtime - Part 1 of 2",
    "summary": "<p>The dynamic runtime nature of Groovy is one of the things that sets it apart from standard Java and makes it a fantastic language for building dynamic applications for the Java Platform. The metaprogramming capabilities offered by the language provide everything that an application development team needs to build systems that are far more capable than their all Java counterparts. This Part 1 of 2 will cover the runtime metaprogramming capabilities of Groovy. The session will dive deep into Groovy's Meta Object Protocol (MOP) which implements the incredibly dynamic runtime dispatch mechanism. The session will include a lot of live code demonstrating really powerful runtime features of the language. This session is focused specifically on Groovy's runtime metaprogramming capabilities. Part 2 of 2 will cover Groovy's compile time metaprogramming capabilities<\u002fp>",
    "speakers": [
      {
        "id": 52,
        "name": "Jeff Scott Brown"
      }
    ],
    "tags": ["Groovy metaprogramming"],
    "slot": {
      "start": "13:25:00",
      "end": "14:15:00",
      "duration": 50,
      "talk": {
        "id": 74,
        "title": "Metaprogramming With The Groovy Runtime - Part 1 of 2"
      },
      "speakers": [
        {
          "id": 52,
          "name": "Jeff Scott Brown"
        }
      ]
    }
  },
  {
    "id": 27,
    "title": "Performance tuning Grails applications",
    "summary": "<p>Grails has great performance characteristics but as with all full stack frameworks, attention must be paid to optimize performance. In this talk Lari will discuss common missteps that can easily be avoided and share tips and tricks which help profile and tune Grails applications.<\u002fp>",
    "speakers": [
      {
        "id": 28,
        "name": "Lari Hotari"
      }
    ],
    "tags": [
      "grails",
      "Performance",
      "Tuning",
      "Profiling",
      "Benchmarking"
    ],
    "slot": {
      "start": "15:50:00",
      "end": "16:40:00",
      "duration": 50,
      "talk": {
        "id": 27,
        "title": "Performance tuning Grails applications"
      },
      "speakers": [
        {
          "id": 28,
          "name": "Lari Hotari"
        }
      ]
    }
  },
  {
    "id": 76,
    "title": "Polyglot Web Development With Grails 2",
    "summary": "<p>Grails is one of the most flexible and most powerful frameworks on The Java Platform. Grails leverages the flexibility offered by the platform in a way that other web frameworks do not. Grails is a fantastic platform for polglot web programming. Part of what makes Grails so compelling is its really powerful plugin system. The Grails plugin system allows capabilities to be bolted on to applications, including adding support for a variety of programming languages. All of the major programming languages available on the JVM are supported by The Grails Framework. These include Java, Groovy, Scala, Clojure and others. This session will dive in to that aspect of the framework with a focus on Scala and Clojure and will demonstrate what is involved in adding support for new languages.<\u002fp>",
    "speakers": [
      {
        "id": 52,
        "name": "Jeff Scott Brown"
      }
    ],
    "tags": ["Grails polyglot web"],
    "slot": {
      "start": "16:50:00",
      "end": "17:40:00",
      "duration": 50,
      "talk": {
        "id": 76,
        "title": "Polyglot Web Development With Grails 2"
      },
      "speakers": [
        {
          "id": 52,
          "name": "Jeff Scott Brown"
        }
      ]
    }
  },
  {
    "id": 83,
    "title": "Ratpack and Grails 3",
    "summary": "<p>One of the goals of Grails 3 is to reach out of the servlet container. Grails 3 has a concept of application profiles for choosing a certain set of core plugins to use. In this talk Lari will present how Ratpack fits in Grails 3. He will also talk about how Grails 3 supports micro service architectures.<\u002fp>",
    "speakers": [
      {
        "id": 28,
        "name": "Lari Hotari"
      }
    ],
    "tags": [
      "grails",
      "Msa",
      "Roadmap",
      "Grails3",
      "Ratpack"
    ],
    "slot": {
      "start": "09:35:00",
      "end": "10:25:00",
      "duration": 50,
      "talk": {
        "id": 83,
        "title": "Ratpack and Grails 3"
      },
      "speakers": [
        {
          "id": 28,
          "name": "Lari Hotari"
        }
      ]
    }
  },
  {
    "id": 120,
    "title": "Security workshop",
    "summary": "<p>TBD<\u002fp>",
    "speakers": [
      {
        "id": 63,
        "name": "Colin Harrington"
      }
    ],
    "tags": [
      "Fine-grained security",
      "grails"
    ],
    "slot": {
      "start": "09:00:00",
      "end": "11:45:00",
      "duration": 165,
      "talk": {
        "id": 120,
        "title": "Security workshop"
      },
      "speakers": [
        {
          "id": 63,
          "name": "Colin Harrington"
        }
      ]
    }
  },
  {
    "id": 116,
    "title": "The Grails introduction workshop",
    "summary": "<p>Grails is a complete web application framework that runs on the Java JVM. It is a full-stack framework, and handles all layers from the user interface to the persistence layer. Grails is based on known and proven technologies, such as the Spring Framework and Hibernate. It has been around since 2006, and has made considerable progress around the globe in the past few years.<\u002fp><p>This workshop aims to show how to get from 0 to running application with Grails in three hours - so hold on to your hats! We will touch the following points:<\u002fp>\n<ul>\n  <li>Grails application structure<\u002fli>\n  <li>Domain model and persistence<\u002fli>\n  <li>Controllers<\u002fli>\n  <li>Services<\u002fli>\n  <li>Testing<\u002fli>\n  <li>User Interface<\u002fli>\n<\u002ful><p>You should definetly bring your own laptop and having the latest and greatest version of Grails installed would be a good starting point. Note that all necessary software is available on the USB drive in your keychain.<\u002fp>",
    "speakers": [
      {
        "id": 70,
        "name": "Brian Johnsen"
      }
    ],
    "tags": [
      "grails",
      "groovy"
    ],
    "slot": {
      "start": "12:30:00",
      "end": "15:15:00",
      "duration": 165,
      "talk": {
        "id": 116,
        "title": "The Grails introduction workshop"
      },
      "speakers": [
        {
          "id": 70,
          "name": "Brian Johnsen"
        }
      ]
    }
  },
  {
    "id": 63,
    "title": "The Groovy Ecosystem Revisited",
    "summary": "<p>Groovy is a well established player in the JVM since a few years ago. It's increased popularity across the years has spawned several projects that conform the Groovy Ecosystem. You've probably heard of Grails, Gradle, Griffon and Spock. But what about the rest of projects that are just waiting around the corner to be discovered and make your life easier? This talk presents them tools and libraries that use Groovy as the main driving force to get the job done.<\u002fp>",
    "speakers": [
      {
        "id": 47,
        "name": "Andres Almiray"
      }
    ],
    "tags": [
      "Frameworks",
      "groovy",
      "Libraries",
      "Tools"
    ],
    "slot": {
      "start": "10:30:00",
      "end": "11:20:00",
      "duration": 50,
      "talk": {
        "id": 63,
        "title": "The Groovy Ecosystem Revisited"
      },
      "speakers": [
        {
          "id": 47,
          "name": "Andres Almiray"
        }
      ]
    }
  },
  {
    "id": 61,
    "title": "The new Groovy Meta Object Protocol in examples",
    "summary": "<p>Groovy3 and the new MOP are closing in! But the time of this talk the new MOP will not be done, but I will show some examples of how old Groovy code will look like transferred to the new MOP.<\u002fp>",
    "speakers": [
      {
        "id": 46,
        "name": "Jochen Theodorou"
      }
    ],
    "tags": [
      "groovy",
      "Metaprogramming"
    ],
    "slot": {
      "start": "13:35:00",
      "end": "14:25:00",
      "duration": 50,
      "talk": {
        "id": 61,
        "title": "The new Groovy Meta Object Protocol in examples"
      },
      "speakers": [
        {
          "id": 46,
          "name": "Jochen Theodorou"
        }
      ]
    }
  },
  {
    "id": 117,
    "title": "Unleashing the power of AST transformations",
    "summary": "<p>The Groovy language provides a wide scope of metaprogramming capabilities, making it a “very dynamic” language. One of those aspects, AST transformations, is about changing the internal representation of a program before it is actually executed. For example, using the @Log annotation, you can transparently add a logger field into a class. Using @ToString, you can have the compiler generate the toString method for you. All those AST transformations are very powerful, but require a deeper knowledge of the compiler internals. In this workshop, we will introduce you from the beginning to AST transformations, describe the abstract syntax tree, setup a development environment and eventually, write some AST transformations so that you can contribute some in turn. The session will also show you some common traps, such as variable scoping, generics and compatibility with other AST transforms.<\u002fp>",
    "speakers": [
      {
        "id": 27,
        "name": "Cédric Champeau"
      }
    ],
    "tags": [],
    "slot": {
      "start": "15:30:00",
      "end": "18:15:00",
      "duration": 165,
      "talk": {
        "id": 117,
        "title": "Unleashing the power of AST transformations"
      },
      "speakers": [
        {
          "id": 27,
          "name": "Cédric Champeau"
        }
      ]
    }
  },
  {
    "id": 18,
    "title": "Vert.x using Groovy - How you can simplify non-blocking code",
    "summary": "<p>The possibilities and advantages of non-blocking IO are great. But as you have to hassle with callbacks all over the place you have to think differently. Sometimes simple constructs we are used to are getting ugly or really hard to realize. A little bit of Groovy-magic can help out to simplify life and make your code more look like you are used to. This session whats to show experiences creating a vert.x-based application and the solutions we used to smooth up our code.<\u002fp>",
    "speakers": [
      {
        "id": 25,
        "name": "Alexander (Sascha) Klein"
      }
    ],
    "tags": [
      "Vert.x",
      "groovy"
    ],
    "slot": {
      "start": "14:30:00",
      "end": "15:20:00",
      "duration": 50,
      "talk": {
        "id": 18,
        "title": "Vert.x using Groovy - How you can simplify non-blocking code"
      },
      "speakers": [
        {
          "id": 25,
          "name": "Alexander (Sascha) Klein"
        }
      ]
    }
  },
  {
    "id": 112,
    "title": "Welcome to GR8Conf 2014",
    "summary": "<p>This is a short introduction to GR8Conf 2014!<\u002fp><p>Here you can hear about what to expect, the pratical aspects of the conference and much more<\u002fp>",
    "speakers": [
      {
        "id": 1,
        "name": "Søren Berg Glasius"
      }
    ],
    "tags": ["Welcome"],
    "slot": {
      "start": "09:00:00",
      "end": "09:15:00",
      "duration": 15,
      "talk": {
        "id": 112,
        "title": "Welcome to GR8Conf 2014"
      },
      "speakers": [
        {
          "id": 1,
          "name": "Søren Berg Glasius"
        }
      ]
    }
  }
]
